Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport \"CRUD/routes\"\r\n\r\nfunc main() {\r\n\troutes.Handle()\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
--- a/main.go	(revision c479aae525c714cb71e5373f2b2ed0f4d340ce71)
+++ b/main.go	(date 1673630225790)
@@ -1,6 +1,8 @@
 package main
 
-import "CRUD/routes"
+import (
+	"CRUD/routes"
+)
 
 func main() {
 	routes.Handle()
Index: routes/users.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package routes\r\n\r\nimport (\r\n\t\"CRUD/controllers\"\r\n\t\"net/http\"\r\n)\r\n\r\nfunc Handle() {\r\n\thttp.HandleFunc(\"/\", controllers.HelloServer)\r\n\thttp.ListenAndServe(\":80\", nil)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/routes/users.go b/routes/users.go
--- a/routes/users.go	(revision c479aae525c714cb71e5373f2b2ed0f4d340ce71)
+++ b/routes/users.go	(date 1673633783205)
@@ -6,6 +6,9 @@
 )
 
 func Handle() {
+	http.HandleFunc("/user/delete/", controllers.DeleteUser)
+	http.HandleFunc("/users", controllers.SelectUsers)
 	http.HandleFunc("/", controllers.HelloServer)
+
 	http.ListenAndServe(":80", nil)
 }
Index: controllers/user.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n)\r\n\r\nfunc HelloServer(w http.ResponseWriter, r *http.Request) {\r\n\tfmt.Fprintf(w, \"Hello, %s!\", r.URL.Path[1:])\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/user.go b/controllers/user.go
--- a/controllers/user.go	(revision c479aae525c714cb71e5373f2b2ed0f4d340ce71)
+++ b/controllers/user.go	(date 1673635606945)
@@ -1,10 +1,39 @@
 package controllers
 
 import (
+	"CRUD/models"
 	"fmt"
 	"net/http"
+	"strconv"
 )
 
 func HelloServer(w http.ResponseWriter, r *http.Request) {
-	fmt.Fprintf(w, "Hello, %s!", r.URL.Path[1:])
+
+	db := models.Delete(1)
+	defer db.Close()
+	_, err := fmt.Fprintf(w, "Hello, %s!", r.URL.Path[1:])
+	if err != nil {
+		panic(err)
+	}
+
+}
+
+func DeleteUser(w http.ResponseWriter, r *http.Request) {
+	db := models.Delete(4)
+	defer db.Close()
+	_, err := fmt.Fprintf(w, "Пользователь успешно удален!")
+	if err != nil {
+		panic(err)
+	}
+}
+
+func SelectUsers(w http.ResponseWriter, r *http.Request) {
+	users, db := models.SelectAll()
+	defer db.Close()
+	for _, u := range users {
+		_, err := fmt.Fprintf(w, "Пользователь: %s, %s, %s, %s, %s \n", strconv.Itoa(u.Id), u.Name, u.Email, u.Login, u.Pass)
+		if err != nil {
+			panic(err)
+		}
+	}
 }
Index: models/users.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models/users.go b/models/users.go
new file mode 100644
--- /dev/null	(date 1673634987188)
+++ b/models/users.go	(date 1673634987188)
@@ -0,0 +1,52 @@
+package models
+
+import (
+	"database/sql"
+	"fmt"
+	_ "github.com/lib/pq"
+)
+
+type User struct {
+	Id                       int
+	Login, Name, Pass, Email string
+}
+
+func openConnection() *sql.DB {
+	connStr := "user=postgres password=root dbname=CRUDapi sslmode=disable"
+	db, err := sql.Open("postgres", connStr)
+	if err != nil {
+		panic(err)
+	}
+	return db
+}
+
+func Delete(userID int) *sql.DB {
+	db := openConnection()
+	result, err := db.Exec("DELETE FROM users WHERE id = $1", userID)
+	if err != nil {
+		panic(err)
+	}
+	fmt.Println(result.LastInsertId())
+	return db
+}
+
+func SelectAll() ([]User, *sql.Rows) {
+	db := openConnection()
+	rows, err := db.Query("SELECT * FROM users")
+	if err != nil {
+		panic(err)
+	}
+	users := []User{}
+
+	for rows.Next() {
+		u := User{}
+		err := rows.Scan(&u.Id, &u.Login, &u.Name, &u.Pass, &u.Email)
+		if err != nil {
+			panic(err)
+		}
+		users = append(users, u)
+		fmt.Println(users)
+	}
+
+	return users, rows
+}
Index: go.mod
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module CRUD\r\n\r\ngo 1.19\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.mod b/go.mod
--- a/go.mod	(revision c479aae525c714cb71e5373f2b2ed0f4d340ce71)
+++ b/go.mod	(date 1673627393944)
@@ -1,3 +1,5 @@
 module CRUD
 
 go 1.19
+
+require github.com/lib/pq v1.10.7
